name: Build docker images

on:
  push:
    branches:
    - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Check file changes
        run: git diff --name-only HEAD~1 HEAD | grep --perl-regexp '^[^\/]+' --only-matching > changes.txt

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: deconvolution
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build docker images
        run: |
          set -e
          while IFS= read -r METHOD
          do
            if [ -f "$METHOD/Dockerfile" ]; then
              echo "Building $METHOD"
          
              docker buildx build \
                     --build-arg BASE_IMAGE=deconvolution/base:latest \
                     --tag deconvolution/${METHOD,,}:latest \
                     --cache-from=type=registry,ref=deconvolution/${METHOD,,}:buildcache \
                     --cache-to=type=registry,ref=deconvolution/${METHOD,,}:buildcache,mode=max \
                     --output=type=docker $METHOD
          
              if [[ "$METHOD" != "base" ]]; then
                echo "Testing $METHOD"
                docker run --rm -v ./data/Bone_Marrow.h5:/input.h5 -v ./:/output -e INPUT_PATH=/input.h5 -e OUTPUT_PATH=/output/$METHOD-results.h5 deconvolution/${METHOD,,}:latest
          
                if [ -f "$METHOD-results.h5" ]; then
                  echo "Found $METHOD-results.h5"
                else
                  echo "$METHOD-results.h5 does not exist."
                  exit 1
                fi
              fi
          
              echo "Pushing $METHOD to docker hub"
              docker push deconvolution/${METHOD,,}:latest
            fi
          done < changes.txt
